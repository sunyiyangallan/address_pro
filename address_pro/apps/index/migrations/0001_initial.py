# Generated by Django 4.1.1 on 2025-02-18 00:54

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Address",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_time",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated_time",
                    models.DateTimeField(auto_now=True, verbose_name="最后更新时间"),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True, max_length=64, null=True, verbose_name="name"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="AddressUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_time",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated_time",
                    models.DateTimeField(auto_now=True, verbose_name="最后更新时间"),
                ),
                ("uuid", models.UUIDField(default=uuid.uuid4, verbose_name="uuid")),
                (
                    "avatar",
                    models.FileField(
                        blank=True,
                        default="avatar/avatar.svg",
                        null=True,
                        upload_to="avatar",
                        verbose_name="avatar",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True, max_length=64, null=True, verbose_name="username"
                    ),
                ),
                (
                    "password",
                    models.CharField(
                        blank=True, max_length=128, null=True, verbose_name="password"
                    ),
                ),
                (
                    "juese",
                    models.SmallIntegerField(
                        choices=[(0, "Driver"), (1, "Dispatcher"), (2, "Admin")],
                        default=0,
                        verbose_name="role",
                    ),
                ),
                (
                    "token",
                    models.CharField(
                        blank=True, max_length=128, null=True, verbose_name="Token"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="BaseSettings",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_time",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated_time",
                    models.DateTimeField(auto_now=True, verbose_name="最后更新时间"),
                ),
                (
                    "media_url",
                    models.CharField(
                        blank=True, max_length=64, null=True, verbose_name="media_url"
                    ),
                ),
                (
                    "img",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="avatar",
                        verbose_name="backend_img",
                    ),
                ),
                (
                    "gaode_key",
                    models.CharField(
                        blank=True, max_length=128, null=True, verbose_name="gaode_key"
                    ),
                ),
                (
                    "code",
                    models.CharField(
                        blank=True, max_length=64, null=True, verbose_name="auth_code"
                    ),
                ),
            ],
            options={
                "verbose_name": "basetings",
                "verbose_name_plural": "basetings",
                "db_table": "base_settings",
            },
        ),
        migrations.CreateModel(
            name="Order",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_time",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated_time",
                    models.DateTimeField(auto_now=True, verbose_name="最后更新时间"),
                ),
                ("uuid", models.UUIDField(default=uuid.uuid4, verbose_name="uuid")),
                (
                    "desc",
                    models.CharField(
                        blank=True, max_length=125, null=True, verbose_name="desc"
                    ),
                ),
                (
                    "level",
                    models.SmallIntegerField(
                        choices=[(0, "Low"), (1, "Mid"), (2, "High")],
                        default=0,
                        verbose_name="priority",
                    ),
                ),
                (
                    "date",
                    models.DateTimeField(blank=True, null=True, verbose_name="date"),
                ),
                (
                    "is_valid",
                    models.BooleanField(default=True, verbose_name="is_valid"),
                ),
                (
                    "state",
                    models.SmallIntegerField(
                        choices=[
                            (-1, "unallocated"),
                            (0, "unstarted"),
                            (1, "ongoings"),
                            (2, "completed"),
                        ],
                        default=-1,
                        verbose_name="state",
                    ),
                ),
                (
                    "start_time",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="start_time"
                    ),
                ),
                (
                    "end_time",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="end_time"
                    ),
                ),
                (
                    "start_address",
                    models.CharField(
                        blank=True,
                        max_length=125,
                        null=True,
                        verbose_name="start_address",
                    ),
                ),
                (
                    "end_address",
                    models.CharField(
                        blank=True,
                        max_length=125,
                        null=True,
                        verbose_name="end_address",
                    ),
                ),
                (
                    "start_location",
                    models.CharField(
                        blank=True,
                        max_length=125,
                        null=True,
                        verbose_name="start_location",
                    ),
                ),
                (
                    "end_location",
                    models.CharField(
                        blank=True,
                        max_length=125,
                        null=True,
                        verbose_name="end_location",
                    ),
                ),
                (
                    "num",
                    models.IntegerField(
                        blank=True, default=0, null=True, verbose_name="num"
                    ),
                ),
                (
                    "shunxu",
                    models.IntegerField(blank=True, null=True, verbose_name="order"),
                ),
                (
                    "connect_user",
                    models.CharField(
                        blank=True,
                        max_length=64,
                        null=True,
                        verbose_name="connect_user",
                    ),
                ),
                (
                    "connect_phone",
                    models.CharField(
                        blank=True,
                        max_length=64,
                        null=True,
                        verbose_name="connect_phone",
                    ),
                ),
                ("price", models.FloatField(default=0, verbose_name="price")),
                (
                    "is_reback",
                    models.BooleanField(default=False, verbose_name="is_reback"),
                ),
                (
                    "type_str",
                    models.TextField(blank=True, null=True, verbose_name="type_str"),
                ),
                (
                    "remark",
                    models.TextField(blank=True, null=True, verbose_name="remark"),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="OrderType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_time",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated_time",
                    models.DateTimeField(auto_now=True, verbose_name="最后更新时间"),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True, max_length=64, null=True, verbose_name="name"
                    ),
                ),
                ("price", models.FloatField(default=0, verbose_name="price")),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Service",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_time",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated_time",
                    models.DateTimeField(auto_now=True, verbose_name="最后更新时间"),
                ),
                (
                    "category",
                    models.CharField(
                        blank=True, max_length=128, null=True, verbose_name="category"
                    ),
                ),
                (
                    "price",
                    models.FloatField(blank=True, null=True, verbose_name="price"),
                ),
                (
                    "address",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="index.address",
                        verbose_name="address",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ServiceType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_time",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated_time",
                    models.DateTimeField(auto_now=True, verbose_name="最后更新时间"),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True, max_length=64, null=True, verbose_name="name"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="UpdateOrder",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_time",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated_time",
                    models.DateTimeField(auto_now=True, verbose_name="最后更新时间"),
                ),
                (
                    "desc",
                    models.CharField(
                        blank=True, max_length=125, null=True, verbose_name="desc"
                    ),
                ),
                (
                    "level",
                    models.SmallIntegerField(
                        choices=[(0, "Low"), (1, "Mid"), (2, "High")],
                        default=0,
                        verbose_name="priority",
                    ),
                ),
                (
                    "date",
                    models.DateTimeField(blank=True, null=True, verbose_name="date"),
                ),
                (
                    "end_address",
                    models.CharField(
                        blank=True,
                        max_length=125,
                        null=True,
                        verbose_name="end_address",
                    ),
                ),
                (
                    "num",
                    models.IntegerField(
                        blank=True, default=0, null=True, verbose_name="num"
                    ),
                ),
                (
                    "connect_user",
                    models.CharField(
                        blank=True,
                        max_length=64,
                        null=True,
                        verbose_name="connect_user",
                    ),
                ),
                (
                    "connect_phone",
                    models.CharField(
                        blank=True,
                        max_length=64,
                        null=True,
                        verbose_name="connect_phone",
                    ),
                ),
                ("price", models.FloatField(default=0, verbose_name="price")),
                (
                    "type_str",
                    models.TextField(blank=True, null=True, verbose_name="type_str"),
                ),
                (
                    "remark",
                    models.TextField(blank=True, null=True, verbose_name="remark"),
                ),
                (
                    "service_list",
                    models.ManyToManyField(
                        blank=True,
                        null=True,
                        to="index.service",
                        verbose_name="service_list",
                    ),
                ),
                (
                    "type",
                    models.ManyToManyField(
                        blank=True, null=True, to="index.ordertype", verbose_name="type"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="service",
            name="service_type",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="index.servicetype",
                verbose_name="service_type",
            ),
        ),
        migrations.CreateModel(
            name="OrderService",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_time",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated_time",
                    models.DateTimeField(auto_now=True, verbose_name="最后更新时间"),
                ),
                (
                    "order",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="index.order"
                    ),
                ),
                (
                    "service",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="index.service"
                    ),
                ),
            ],
            options={
                "verbose_name": "OrderService",
                "verbose_name_plural": "OrderService",
            },
        ),
        migrations.AddField(
            model_name="order",
            name="service_list",
            field=models.ManyToManyField(
                blank=True,
                through="index.OrderService",
                to="index.service",
                verbose_name="service_list",
            ),
        ),
        migrations.AddField(
            model_name="order",
            name="type",
            field=models.ManyToManyField(
                blank=True, null=True, to="index.ordertype", verbose_name="type"
            ),
        ),
        migrations.AddField(
            model_name="order",
            name="update_order",
            field=models.OneToOneField(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="index.updateorder",
            ),
        ),
        migrations.AddField(
            model_name="order",
            name="user",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="index.addressuser",
                verbose_name="user",
            ),
        ),
    ]
